//Código para arduino
#include <Servo.h>
#include <EEPROM.h>
#include <LiquidCrystal_I2C.h>

// Definición de pines para los servomotores
const int codo = 6;
const int brazo = 9;
const int muneca = 10;
const int garra = 11;

// Definición de pines para los joysticks
const int joyStick1_X = A0;
const int joyStick1_Y = A1;
const int joyStick2_X = A2;
const int joyStick2_Y = A3;

// Definición de pines para los botones
const int automatico1 = 2;
const int manual2 = 3;

// Variables para almacenar los valores de los joysticks
volatile int joyStick1XValue = 0;
volatile int joyStick1YValue = 0;
volatile int joyStick2XValue = 0;
volatile int joyStick2YValue = 0;

// Variables para almacenar los ángulos de los servomotores
volatile int codoAngle = 90;
volatile int brazoAngle = 90;
volatile int munecaAngle = 90;
volatile int garraAngle = 90;

// Definición de pines para la pantalla LCD
const int lcdAddr = 0x27; // Dirección I2C de la pantalla
const int lcdCols = 16;   // Número de columnas de la pantalla
const int lcdRows = 2;    // Número de filas de la pantalla

// Variables para la pantalla LCD
LiquidCrystal_I2C lcd(lcdAddr, lcdCols, lcdRows);

// Crear objetos de tipo Servo
Servo codo;
Servo brazo;
Servo muneca;
Servo garra;


// Función para actualizar los ángulos de los servomotores
void updateServoAngles() {
  // Actualizar los ángulos de los servomotores
  // utilizando los valores de los joysticks
  codoAngle = map(joyStick1XValue, 0, 1023, 0, 180);
  brazoAngle = map(joyStick1YValue, 0, 1023, 0, 180);
  munecaAngle = map(joyStick2XValue, 0, 1023, 0, 180);
  garraAngle = map(joyStick2YValue, 0, 1023, 0, 180);

  // Mover los servomotores a los ángulos correspondientes
  codo.write(servo1Angle);
  brazo.write(servo2Angle);
  muneca.write(servo3Angle);
  garra.write(servo4Angle);
}