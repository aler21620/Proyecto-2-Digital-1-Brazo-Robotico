#include <Servo.h>

// Definición de pines para los servomotores
const int codopin = 6;
const int brazopin = 9;
const int munecapin = 10;
const int garrapin = 11;

// Crear objetos de tipo Servo
Servo codo;
Servo brazo;
Servo muneca;
Servo garra;

void setup() {
  // Iniciar comunicación serial a 9600 baudios
  Serial.begin(9600);
  
  // Configurar los pines de los servomotores como salidas utilizando registros
  DDRB |= (1 << codopin) | (1 << brazopin) | (1 << munecapin) | (1 << garrapin);

  // Inicializar los objetos de tipo Servo
  codo.attach(codopin);
  brazo.attach(brazopin);
  muneca.attach(munecapin);
  garra.attach(garrapin);
  
}

void loop() {
  
  if (Serial.available() > 0) {
    // Leer la línea de datos recibida
    String data = Serial.readStringUntil('\n');

    // Separar los ángulos de los servomotores
    int separatorIndex1 = data.indexOf(",");
    int separatorIndex2 = data.indexOf(",", separatorIndex1 + 1);
    int separatorIndex3 = data.indexOf(",", separatorIndex2 + 1);

    if (separatorIndex1 != -1 && separatorIndex2 != -1 && separatorIndex3 != -1) {
      // Extraer los ángulos de los servomotores
      int codoAngle = data.substring(0, separatorIndex1).toInt();
      int brazoAngle = data.substring(separatorIndex1 + 1, separatorIndex2).toInt();
      int munecaAngle = data.substring(separatorIndex2 + 1, separatorIndex3).toInt();
      int garraAngle = data.substring(separatorIndex3 + 1).toInt();

      // Mover los servomotores a los ángulos recibidos
      codo.write(codoAngle);
      brazo.write(brazoAngle);
      muneca.write(munecaAngle);
      garra.write(garraAngle);
    }
  }
 }